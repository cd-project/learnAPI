{
    "swagger": "2.0",
    "info": {
        "title": "Swagger",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/board/delete/{boardid}": {
            "delete": {
                "description": "Board with boardID will be deleted",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Board with boardID will be deleted",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the to be deleted board",
                        "name": "boardid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/board/{boardid}/update": {
            "put": {
                "description": "given new data and id, update board",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get board updated with new data",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the to be updated board",
                        "name": "boardid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update content",
                        "name": "UpdateContent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/sys/allBoard": {
            "get": {
                "description": "get all boards",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "board-manager-apis"
                ],
                "summary": "get all boards",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/sys/filter": {
            "put": {
                "description": "board db will be filtered using given model\njson",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "board-manager-apis"
                ],
                "summary": "filtered data will be shown",
                "parameters": [
                    {
                        "description": "Filter Content",
                        "name": "FilterContent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/{uid}/allBoard": {
            "get": {
                "description": "gets all board belong to UserID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets all board belong to UserID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/{uid}/board/create": {
            "post": {
                "description": "create a new board with given model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create new Board with given model",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Owner of this board",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Board information",
                        "name": "BoardInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Board"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/work/all": {
            "get": {
                "description": "Get all Todos",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all Todos",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/work/create": {
            "post": {
                "description": "Create new Todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "todo-manager-apis"
                ],
                "summary": "Create new Todo",
                "parameters": [
                    {
                        "description": "Todo information",
                        "name": "TodoInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/work/delete/{id}": {
            "delete": {
                "description": "Delete a Todo with an ID specified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the to be deleted Todo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/work/search/{id}": {
            "get": {
                "description": "gets todo by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "gets todo by its ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of needed todo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/work/updater/{id}": {
            "put": {
                "description": "Update an ID specified Todo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update an ID specified Todo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the to be updated Todo",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UpdateContent information",
                        "name": "UpdateContent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Todo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Board": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "profileID": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Todo": {
            "type": "object",
            "properties": {
                "boardID": {
                    "description": "BoardID \tid of board which has this todo.",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "finished": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}